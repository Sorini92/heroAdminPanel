{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","state","heroes","activeFilter","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","heroesFetched","catch","elements","arr","length","items","filter","item","map","id","props","CSSTransition","timeout","classNames","heroesWithoutOneHero","newHeroes","heroDelete","renderHeroesList","TransitionGroup","component","HeroesAddForm","filters","filtersLoadingStatus","useState","setName","text","setText","setElement","options","slice","i","value","label","renderOptions","onSubmit","e","preventDefault","hero","uuidv4","newHero","htmlFor","required","onChange","target","placeholder","HeroesFilters","setActiveFilter","filtersFetched","buttons","clazz","chosenActiveFilter","App","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e73999f.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n    \n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n            >\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button onClick={onDelete} type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { heroesFetching, heroesFetched, heroesFetchingError, heroDelete } from '../../actions';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n    const {heroes, activeFilter, heroesLoadingStatus} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(heroesFetching());\n        request(\"http://localhost:3001/heroes\")\n            .then(data => dispatch(heroesFetched(data)))\n            .catch(() => dispatch(heroesFetchingError()))\n        // eslint-disable-next-line\n    }, []);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const onDelete = (id) => {\n        const heroesWithoutOneHero = heroes.filter(item => item.id !== id);\n        dispatch(heroDelete(heroesWithoutOneHero))\n\n        /* request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .catch(() => dispatch(heroesFetchingError())) */\n    }\n\n    const filteredData = (items, filter) => {\n        if (filter === 'all') {\n            return items\n        } else {\n            return items.filter(item => item.element === filter)\n        }\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n\n        return filteredData(arr, activeFilter).map(({id, ...props}) => {\n            return (\n                <CSSTransition timeout={400} classNames=\"card\" key={id}>\n                    <HeroesListItem onDelete={() => onDelete(id)} key={id} {...props}/>\n                </CSSTransition>                    \n            )\n        })\n    }\n\n    const elements = renderHeroesList(heroes);\n\n    return (\n        <TransitionGroup component='ul'>\n            {elements}\n        </TransitionGroup> \n    )\n}\n\nexport default HeroesList;","export const heroesFetching = () => {\n    return {\n        type: 'HEROES_FETCHING'\n    }\n}\n\nexport const heroesFetched = (heroes) => {\n    return {\n        type: 'HEROES_FETCHED',\n        payload: heroes\n    }\n}\n\nexport const heroDelete = (heroesWithoutOneHero) => {\n    return {\n        type: 'HERO_DELETE',\n        newHeroes: heroesWithoutOneHero\n    }\n}\n\nexport const heroAdd = (newHero) => {\n    return {\n        type: 'HERO_ADD',\n        newHero: newHero\n    }\n}\n\nexport const heroesFetchingError = () => {\n    return {\n        type: 'HEROES_FETCHING_ERROR'\n    }\n}\n\nexport const filtersFetching = () => {\n    return {\n        type: 'FILTERS_FETCHING'\n    }\n}\n\nexport const filtersFetched = (filters) => {\n    return {\n        type: 'FILTERS_FETCHED',\n        payload: filters\n    }\n}\n\nexport const filtersFetchingError = () => {\n    return {\n        type: 'FILTERS_FETCHING_ERROR'\n    }\n}\n\nexport const chosenActiveFilter = (activeFilter) => {\n    return {\n        type: 'HERO_ACTIVEFILTER',\n        activeFilter: activeFilter\n    }\n}","import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {useHttp} from '../../hooks/http.hook';\n\nimport { heroAdd } from '../../actions';\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const [name, setName] = useState('');\n    const [text, setText] = useState('');\n    const [element, setElement] = useState('Я владею элементом...');\n\n    const addNewHero = (e) => {\n        e.preventDefault();\n\n        const hero = {\n                id: uuidv4(),\n                name, \n                description: text, \n                element\n            }\n\n        dispatch(heroAdd(hero))\n\n        /* request('http://localhost:3001/heroes/', \"POST\", JSON.stringify(hero))\n        .catch(() => dispatch(heroesFetchingError())) */\n\n        setName('');\n        setText('');\n        setElement('Я владею элементом...')\n    }\n    \n    const renderOptions = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n\n        const newArr = filters.slice(1, 5);\n        return newArr.map((item, i) => {\n            return <option key={i} value={item.name}>{item.label}</option>\n        })\n    }\n\n    const options = renderOptions(filters, filtersLoadingStatus);\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={addNewHero}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\"\n                    value={name} \n                    onChange={(e) => setName(e.target.value)}\n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={element} \n                    onChange={(e) => setElement(e.target.value)}>\n                    <option value=''>Я владею элементом...</option>\n                    {options}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { chosenActiveFilter, filtersFetching, filtersFetched, filtersFetchingError } from '../../actions';\nimport {useHttp} from '../../hooks/http.hook';\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state);\n    const [activeFilter, setActiveFilter] = useState('all');\n    const dispatch = useDispatch();\n\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(filtersFetching());\n        request(\"http://localhost:3001/filters\")\n            .then(data => dispatch(filtersFetched(data)))\n            .catch(() => dispatch(filtersFetchingError()))\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const handler = (filter) => {\n        setActiveFilter(filter)\n        dispatch(chosenActiveFilter(filter))\n    }\n\n    const renderButtons = (arr) => {\n        return arr.map((item, i) => {\n            const active = activeFilter === item.name;\n            const clazz = active ? 'btn active' : 'btn';\n            return <button onClick={() => handler(item.name)} key={i} className={`${clazz} ${item.className}`}>{item.label}</button>\n        })\n    }\n\n    const buttons = renderButtons(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {buttons}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n    filters: [],\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'HEROES_FETCHING':\n            return {\n                ...state,\n                heroesLoadingStatus: 'loading'\n            }\n        case 'HEROES_FETCHED':\n            return {\n                ...state,\n                heroes: action.payload,\n                heroesLoadingStatus: 'idle'\n            }\n        case 'HERO_DELETE':\n            return {\n                ...state,\n                heroes: action.newHeroes,\n                heroesLoadingStatus: 'idle'\n            }\n        case 'HERO_ADD':\n            return {\n                ...state,\n                heroes: [...state.heroes, action.newHero],\n                heroesLoadingStatus: 'idle'\n            }\n        case 'HEROES_FETCHING_ERROR':\n            return {\n                ...state,\n                heroesLoadingStatus: 'error'\n            }\n        case 'FILTERS_FETCHING':\n            return {\n                ...state,\n                filtersLoadingStatus: 'loading'\n            }\n        case 'FILTERS_FETCHED':\n            return {\n                ...state,\n                filters: action.payload,\n                filtersLoadingStatus: 'idle'\n            }\n        case 'FILTERS_FETCHING_ERROR':\n            return {\n                ...state,\n                filtersLoadingStatus: 'error'\n            }\n        case 'HERO_ACTIVEFILTER':\n            return {\n                ...state,\n                activeFilter: action.activeFilter,\n                filtersLoadingStatus: 'idle'\n            }\n        default: return state\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}